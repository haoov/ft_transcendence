version: '3.9'

networks:
  ft_transcendence:

#------------------------------------#
#              Volumes               #
#------------------------------------#
volumes:
  # vuejs_app:
  #   name: vuejs_app
  #   driver: local
  #   driver_opts:
  #     device: ./frontend/vuejs/todo-app
  #     o: bind
  #     type: none

  nestjs_api:
    name: nestjs_api
    driver: local
    driver_opts:
      device: ./backend/nestjs/api
      o: bind
      type: none
  
  postgresql_data:
    name: postgresql_data
    driver: local
    driver_opts:
      device: ./backend/postgresql/data
      o: bind
      type: none

#------------------------------------#
#              Services              #
#------------------------------------#
services:
  # vuejs:
  #   container_name: vuejs
  #   build:
  #     context: ./frontend/vuejs
  #     dockerfile: Dockerfile
  #   image: vuejs
  #   volumes:
  #     - vuejs_app:/app
  #   networks:
  #     - todo-app
  #   ports:
  #     - 4000:80

  nestjs:
    container_name: nestjs
    build:
      context: ./backend/nestjs
      dockerfile: Dockerfile
    image: nestjs
    ports:
      - 3000:3000
    volumes:
      - nestjs_api:/api
    networks:
      - ft_transcendence
    env_file:
      - .env
    depends_on:
      postgresql:
        condition: service_healthy

  postgresql:
    image: postgres
    container_name: postgresql
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    networks:
      - ft_transcendence
    expose:
      - 5432
    healthcheck:
      test: "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
      interval: 1s
      timeout: 10s
      retries: 10
      start_period: 1s